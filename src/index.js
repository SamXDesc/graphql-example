import { ApolloServer, gql } from 'apollo-server'
import { GraphQLScalarType, Kind } from 'graphql'

const books = [
  {
    id: 1,
    title: 'O Senhor dos AnÃ©is - A sociedade do Anel',
    author: 1,
    description: 'A Sociedade do Anel O volume inicial de O Senhor dos AnÃ©is, lanÃ§ado originalmente em julho de 1954, foi o primeiro grande Ã©pico de fantasia moderno, conquistando milhÃµes de leitores e se tornando o padrÃ£o de referÃªncia para todas as outras obras do gÃªnero atÃ© hoje. A imaginaÃ§Ã£o prodigiosa de J.R.R. Tolkien e seu conhecimento profundo das antigas mitologias da Europa permitiram que ele criasse um universo tÃ£o complexo e convincente quanto o mundo real. A Sociedade do Anel comeÃ§a no Condado, a regiÃ£o rural do oeste da Terra-mÃ©dia onde vivem os diminutos e pacatos hobbits. Bilbo Bolseiro, um dos raros aventureiros desse povo, cujas peripÃ©cias foram contadas em O Hobbit, resolve ir embora do Condado e deixa sua considerÃ¡vel heranÃ§a nas mÃ£os de seu jovem parente Frodo. O mais importante legado de Bilbo Ã© o anel mÃ¡gico que costumava usar para se tornar invisÃ­vel. No entanto, o mago Gandalf, companheiro de aventuras do velho hobbit, revela a Frodo que o objeto Ã© o Um Anel, a raiz do poder demonÃ­aco de Sauron, o Senhor Sombrio, que deseja escravizar todos os povos da Terra-mÃ©dia. A Ãºnica maneira de eliminar a ameaÃ§a de Sauron Ã© destruir o Um Anel nas entranhas da prÃ³pria montanha de fogo onde foi forjado. A revelaÃ§Ã£o faz com que Frodo e seus companheiros hobbits Sam, Merry e Pippin deixem a seguranÃ§a do Condado e iniciem uma perigosa jornada rumo ao leste. Ao lado de representantes dos outros Povos Livres que resistem ao Senhor Sombrio, eles formam a Sociedade do Anel. AlguÃ©m uma vez disse que o mundo dos leitores de lÃ­ngua inglesa se divide entre os que jÃ¡ leram O Senhor dos AnÃ©is e os que um dia lerÃ£o o livro. Com esta nova traduÃ§Ã£o da obra, o fascÃ­nio dessa aventura atemporal ficarÃ¡ ainda mais evidente para os leitores brasileiros, tanto os que jÃ¡ conhecem a saga como os que estÃ£o prestes a descobrir seu encanto.',
    createdAt: new Date(),
    categories: ['FANTASY']
  },

  {
    id: 2,
    title: 'Jurassik Park',
    author: 3,
    description: 'Uma impressionante tÃ©cnica de recuperaÃ§Ã£o e clonagem de DNA de seres prÃ©-histÃ³ricos foi descoberta. Finalmente, uma das maiores fantasias da mente humana, algo que parecia impossÃ­vel, tornou-se realidade. Agora, criaturas extintas hÃ¡ eras podem ser vistas de perto, para o fascÃ­nio e o encantamento do pÃºblico. AtÃ© que algo sai do controle. Em Jurassic Park, escrito em 1990 por Michael Crichton, questÃµes de bioÃ©tica e a teoria do caos funcionam como pano de fundo para uma trama de aventura e luta pela sobrevivÃªncia. O livro inspirou o filme homÃ´nimo de 1993, dirigido por Steven Spielberg, uma das maiores bilheterias do cinema de todos os tempos.',
    createdAt: 123, // Data convertida pra String pelo tipo Scalar.
    categories: ['SCIFI']
  },

  {
    id: 3,
    title: 'Cartas de um diabo a seu aprendiz',
    author: 2,
    description: 'IrÃ´nica, astuta, irreverente. Assim pode ser descrita esta obra-prima de C.S. Lewis, dedicada a seu amigo J.R.R. Tolkien. Um clÃ¡ssico da literatura cristÃ£, este retrato satÃ­rico da vida humana, feito pelo ponto de vista do diabo, tem divertido milhÃµes de leitores desde sua primeira publicaÃ§Ã£o, na dÃ©cada de 1940; agora com novo projeto grÃ¡fico e traduÃ§Ã£o atual.Cartas de um diabo a seu aprendiz Ã© a correspondÃªncia ao mesmo tempo cÃ´mica, sÃ©ria e original entre um diabo e seu sobrinho aprendiz. Revelando uma personalidade mais espirituosa, Lewis apresenta nesta obra a mais envolvente narrativa jÃ¡ escrita sobre tentaÃ§Ãµes â€• e a superaÃ§Ã£o delas.',
    createdAt: new Date(),
    categories: [
      'SATIRE',
      'ROMANCE',
      'FICTION',
      'RELIGION'
    ]

  }
]

const authors = [
  {
    id: 1,
    name: 'John',
    lastname: 'Ronald Reuel Tolkien',
    abbreviation: 'J.R.R Tolkien'
  },

  {
    id: 2,
    name: 'Clive',
    lastname: 'Staples Lewis',
    abbreviation: 'C.S Lewis'
  },

  {
    id: 3,
    name: 'John',
    lastname: 'Michael Crichton',
    abbreviation: 'Michael Crichton'
  }
]

// Resolvers define the technique for fetching the types defined in the
// schema. This resolver retrieves books from the "books" array above.
const resolvers = {
  Date: new GraphQLScalarType({
    name: 'Date',
    description: 'Date custom scalar type',
    parseValue (value) {
      return new Date(value) // value from the client
    },
    serialize (value) {
      return value.toLocaleString('pt-BR') // value sent to the client
    },
    parseLiteral (ast) {
      if (ast.kind === Kind.INT) {
        return parseInt(ast.value, 10) // ast value is always in string format
      }
      return null
    }
  }),

  Book: {
    author: book => authors.find(author => book.author === author.id)
  },

  Author: {
    fullname: author => `${author.name} ${author.lastname}`,
    books: author => books.filter(book => book.author === author.id)
  },

  Query: {
    books: () => books,
    book: (_, args) => books.find(book => book.id === args.id),
    authors: () => authors,
    author: (_, args) => authors.find(author => author.id === args.id)
  }
}

const typeDefs = gql`
  scalar Date

  enum Category {
    SATIRE
    ROMANCE
    FICTION
    RELIGION
    BIOGRAPHY
    SCIFI
    FANTASY
  }

  type Book {
    title: String
    author: Author
    description: String
    createdAt: Date
    categories: [Category]
  }

  type Author {
    name: String
    lastname: String
    fullname: String
    abbreviation: String
    books: [Book]
  }

  type Query {
    books: [Book]
    book (id: Int!): Book,
    authors: [Author],
    author (id: Int!): Author
  }
`

// The ApolloServer constructor requires two parameters: your schema
// definition and your set of resolvers.
const server = new ApolloServer({
  typeDefs,
  resolvers
})

// The `listen` method launches a web server.
server.listen().then(({ url }) => {
  console.log(`ğŸš€  Server ready at ${url}`)
})
